[{"content":"This is the second and final part of a series about debugging and tracing tools on Elixir.\nIt covers tools already present in Erlang that can be used to debug and trace local or distributed applications.\nLink: Debugging and Tracing in Erlang\nPublished on AppSignal Blog.\n","permalink":"https://marcosramos.dev/blog/2023/01/debugging-in-elixir-and-erlang-part-2-tracing-distributed-applications/","summary":"Debugging in Elixir and Erlang: Tracing Distributed Applications. Published on AppSignal Blog.","title":"Debugging in Elixir and Erlang - Part 2: Tracing Distributed Applications"},{"content":"This is the first part of a series about debugging and tracing tools on Elixir. It covers the very basic tooling that you can use to start debugging Elixir apps and paves the way for the second part where Iâ€™ll talk about distributed debugging and tracing\nLink: Debugging in Elixir and Erlang: An Introduction\nPublished on AppSignal Blog.\n","permalink":"https://marcosramos.dev/blog/2022/11/debugging-in-elixir-and-erlang-part-1-an-introduction/","summary":"Debugging in Elixir and Erlang: An Introduction. Published on AppSignal Blog.","title":"Debugging in Elixir and Erlang - Part 1: An Introduction"},{"content":"This is the second and final part of the series about code predictability on Elixir. In this part I show how one can use reducers and macros to create a small framework to enforce code style in your project. When I finished writing this post, I also ended up creating ex_pipeline, an open source library that allows developers to create pipelines while enforcing code style easily.\nLink: Predictable Code in Elixir: Expressions as Reducers and Macros\nPublished on AppSignal Blog.\n","permalink":"https://marcosramos.dev/blog/2022/08/writing-predictable-elixir-code-with-reducers-part-2/","summary":"Writing Predictable Elixir Code with Reducers - Part 2. Published on AppSignal Blog.","title":"Writing Predictable Elixir Code with Reducers - Part 2"},{"content":"This is the first part of a series about code predictability on Elixir. It\u0026rsquo;s a gentle introduction on how anyone can use existing Elixir features to write beautiful code and and gives the reader a gentle introduction into the realm of reducers.\nLink: Writing Predictable Elixir Code with Reducers\nPublished on AppSignal Blog.\n","permalink":"https://marcosramos.dev/blog/2022/07/writing-predictable-elixir-code-with-reducers-part-1/","summary":"Writing Predictable Elixir Code with Reducers - Part 1. Published on AppSignal Blog.","title":"Writing Predictable Elixir Code with Reducers - Part 1"},{"content":"In this post I write about how I connected telemetry and hackney to monitor connection pool data.\nLink: Monitoring Hackney Connection Pools with Telemetry\nPublished on The RealReal Product \u0026amp; Tech Blog.\n","permalink":"https://marcosramos.dev/blog/2021/12/monitoring-hackney-connection-pools-with-telemetry/","summary":"Using telemetry to collect data about hackney connection pools. Published on The RealReal Product \u0026amp; Tech Blog.","title":"Monitoring Hackney Connection Pools with Telemetry"},{"content":"As every developer in the world, I always wanted to create a blog to share my ideas and some interesting (at least for me) stuff here and there.\nAnd as almost all of them, I was always postponing it. No more!\n","permalink":"https://marcosramos.dev/blog/2021/10/hello-world/","summary":"A hello world indeed","title":"Hello World"},{"content":"","permalink":"https://marcosramos.dev/about/","summary":"","title":"About me"},{"content":"","permalink":"https://marcosramos.dev/tags/","summary":"","title":"Tags"}]